<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>何年重遇天涯</title>
    <link>/</link>
    <description>Recent content on 何年重遇天涯</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 23 Dec 2021 14:58:00 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About Me</title>
      <link>/about/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>亦余心之所向兮，虽九死其尤未悔。 Github Gitee 架构心法 以可伸可缩为荣，以不可移植为耻； 以可配置性为荣，以硬性编码为耻； 以系统互备为荣，以单机作战为耻；</description>
    </item>
    
    <item>
      <title>Rabin Karp Search</title>
      <link>/post/algorithm/rabin_karp_search/</link>
      <pubDate>Thu, 23 Dec 2021 14:58:00 +0800</pubDate>
      
      <guid>/post/algorithm/rabin_karp_search/</guid>
      <description>算法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 #include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt; using</description>
    </item>
    
    <item>
      <title>SQL</title>
      <link>/post/programming/sql/</link>
      <pubDate>Fri, 26 Nov 2021 21:27:00 +0800</pubDate>
      
      <guid>/post/programming/sql/</guid>
      <description>MySQL 预编译批量插入 当预编译批量插入的时候数据量太大MySQL服务器会报错, 还是直接拼values的sql吧 1 Error 1390: Prepared statement contains too many placeholders 查询所有数据库占用</description>
    </item>
    
    <item>
      <title>中间件</title>
      <link>/post/programming/mq/</link>
      <pubDate>Sun, 14 Nov 2021 13:20:00 +0800</pubDate>
      
      <guid>/post/programming/mq/</guid>
      <description>Redis redis集群版的lua脚本使用会有一致性问题, 需要确保处理的参数在一个slot下从而保证lua执行的单线程 RocketMQ 事物消息 事物消息是发送一个半</description>
    </item>
    
    <item>
      <title>订单业务</title>
      <link>/post/programming/order/</link>
      <pubDate>Sun, 14 Nov 2021 13:20:00 +0800</pubDate>
      
      <guid>/post/programming/order/</guid>
      <description>商品表 字段设计bit与表示这个商品是否在限制某种用户限制, 用户总库存, 用户年库存, 用户月库存, 用户周库存, 用户日库存 订单商品表 字段设计订单i</description>
    </item>
    
    <item>
      <title>sysctl</title>
      <link>/post/linux/systctl/</link>
      <pubDate>Sun, 31 Oct 2021 09:20:00 +0800</pubDate>
      
      <guid>/post/linux/systctl/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>时间相关的算法</title>
      <link>/post/algorithm/time/</link>
      <pubDate>Tue, 26 Oct 2021 15:28:00 +0800</pubDate>
      
      <guid>/post/algorithm/time/</guid>
      <description>北京时间按照日期向下取整 1 2 3 func FloorInCST(t int64) int64 { return t - (t + 8*3600)%86400 }</description>
    </item>
    
    <item>
      <title>Linux Kernel Module</title>
      <link>/post/devops/kernel-module/</link>
      <pubDate>Fri, 08 Oct 2021 17:52:00 +0800</pubDate>
      
      <guid>/post/devops/kernel-module/</guid>
      <description>Linux模块加载 模块保存在/lib/modules/下。 使用/etc/modules-load.d/来配置系统启动时加载哪些模块。 使用/e</description>
    </item>
    
    <item>
      <title>SSL/TLS</title>
      <link>/post/programming/ssl_tls/</link>
      <pubDate>Sat, 18 Sep 2021 16:21:00 +0800</pubDate>
      
      <guid>/post/programming/ssl_tls/</guid>
      <description>流程 SSL/TLS流程 nginx证书和apache证书 apache和nginx的配置都是私钥key一个文件 apache是三个文件将中间链证书</description>
    </item>
    
    <item>
      <title>Linux基础</title>
      <link>/post/linux/linux_base/</link>
      <pubDate>Fri, 10 Sep 2021 22:27:00 +0800</pubDate>
      
      <guid>/post/linux/linux_base/</guid>
      <description>whatis whatis 命令是用于查询一个命令的功能，并将查询结果打印到终端上。 whatis 命令在 man -w 显示的文件中查找 command 参数指定的命令、系统调用、库函数或特殊文件名。wh</description>
    </item>
    
    <item>
      <title>Linux IPtables</title>
      <link>/post/linux/iptables/</link>
      <pubDate>Thu, 02 Sep 2021 16:17:00 +0800</pubDate>
      
      <guid>/post/linux/iptables/</guid>
      <description>五表五链 1 2 3 4 5 6 7 8 9 security表：主要针对的是数据链路层的管理规则组合，只不过它是基于target目标来操作的。 filter表：</description>
    </item>
    
    <item>
      <title>结构体</title>
      <link>/post/programming/struct/</link>
      <pubDate>Tue, 31 Aug 2021 10:29:00 +0800</pubDate>
      
      <guid>/post/programming/struct/</guid>
      <description>定义 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // c #include &amp;lt;stdio.h&amp;gt;typedef struct _user { char name[64]; int age; } user; int main(int argc, char *argv[]) { user user = { .name=&amp;#34;jack&amp;#34;, .age=20 }; printf(&amp;#34;%s\n&amp;#34;, user.name); printf(&amp;#34;%d\n&amp;#34;, user.age); return 0; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description>
    </item>
    
    <item>
      <title>Elisp</title>
      <link>/post/programming/elisp/</link>
      <pubDate>Wed, 18 Aug 2021 21:56:00 +0800</pubDate>
      
      <guid>/post/programming/elisp/</guid>
      <description>定义变量 全局变量 1 2 (setq a1 3) (defvar a1 3 &amp;#34;temp varlue&amp;#34;) ;; 多了一个变量描述字符串 C-h v能看到描述 局部变量 let中变量列表的赋值顺序是不定的，因此在第一个例子里 a3 无</description>
    </item>
    
    <item>
      <title>运维笔记</title>
      <link>/post/devops/note/</link>
      <pubDate>Sat, 10 Jul 2021 12:32:00 +0800</pubDate>
      
      <guid>/post/devops/note/</guid>
      <description>基础 du和df空间不一致: 1. rm删除文件inode节点被进程打开内核不会释放空间. 2. mount挂载非空目录隐藏了原磁盘导致du并没有统计这部</description>
    </item>
    
    <item>
      <title>Bash Utils</title>
      <link>/post/devops/bash_utils/</link>
      <pubDate>Wed, 16 Jun 2021 20:00:00 +0800</pubDate>
      
      <guid>/post/devops/bash_utils/</guid>
      <description>同步时间 1 2 sudo ntpdate ntp.aliyun.com sudo hwclock -w curl http code 1 url=&amp;#39;https://test.juewei.com/actuator/health&amp;#39;; code=200; while [ $code -eq 200 ]; do code=`curl -I -m 30 -o /dev/null -s -w %{http_code}&amp;#34;\n&amp;#34; $url`; sleep 0.1; done openssl 查看https的证书信息 1 openssl s_client -servername prod.juewei.com -connect www.baidu.com:443 | openssl x509 -noout -dates 更换TLS证书</description>
    </item>
    
    <item>
      <title>Ajax Cors</title>
      <link>/post/programming/ajax_cors/</link>
      <pubDate>Wed, 16 Jun 2021 19:49:00 +0800</pubDate>
      
      <guid>/post/programming/ajax_cors/</guid>
      <description>Ajax SIMPLE 1 2 3 4 5 6 7 curl -i -X GET \ -H &amp;#34;Sec-Fetch-Mode:cors&amp;#34; \ -H &amp;#34;Sec-Fetch-Site:cross-site&amp;#34; \ -H &amp;#34;Sec-Fetch-Dest:empty&amp;#34; \ -H &amp;#34;Referer:https://www.baidu.com/&amp;#34; \ -H &amp;#34;Origin:https://www.baidu.com&amp;#34; \ &amp;#39;https://test.juewei.com/a-service&amp;#39; OPTIONS 1 2 3 4 5 6 7 8 9 curl -i -X OPTIONS \ -H &amp;#34;Sec-Fetch-Mode:cors&amp;#34; \ -H &amp;#34;Sec-Fetch-Site:cross-site&amp;#34; \ -H &amp;#34;Sec-Fetch-Dest:empty&amp;#34; \ -H &amp;#34;Referer:https://www.baidu.com/&amp;#34; \ -H &amp;#34;Origin:https://www.baidu.com&amp;#34; \ -H &amp;#34;Access-Control-Request-Method:GET&amp;#34; \ -H &amp;#34;Access-Control-Request-Headers:x-b3-sampled&amp;#34; \ &amp;#39;https://test.juewei.com/a-service&amp;#39; 1 2 3</description>
    </item>
    
    <item>
      <title>Linux Mirrors</title>
      <link>/post/linux/debian/</link>
      <pubDate>Tue, 08 Dec 2020 16:28:00 +0800</pubDate>
      
      <guid>/post/linux/debian/</guid>
      <description>Debian Mirrors 将cloud.aliyuncs是阿里云ECS内部加速地址，换成aliyun就是互联网地址 1 sed -i &amp;#39;s#\w*\.debian\.org#mirrors\.163\.com#g&amp;#39; /etc/apt/sources.list debian 10 buster 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16</description>
    </item>
    
    <item>
      <title>Map electronic fence</title>
      <link>/post/algorithm/map_electronic_fence/</link>
      <pubDate>Fri, 16 Oct 2020 15:28:00 +0800</pubDate>
      
      <guid>/post/algorithm/map_electronic_fence/</guid>
      <description>地图围栏算法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64</description>
    </item>
    
    <item>
      <title>Redis notes</title>
      <link>/post/programming/redis_note/</link>
      <pubDate>Fri, 16 Oct 2020 10:16:00 +0800</pubDate>
      
      <guid>/post/programming/redis_note/</guid>
      <description>Redis notes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 连接 redis-cli -h host -p port -a &amp;#39;password&amp;#39; # 地图经纬度半径查询 GEORADIUS SHOP:COORDINATES 112.936512 28.210319 5000 m WITHCOORD WITHDIST COUNT 20 ASC # 模糊搜索KEY KEYS user_id_* # 模糊清楚KEY redis-cli -h &amp;#39;host&amp;#39; -p port</description>
    </item>
    
    <item>
      <title>The difference between su and sudo in Linux</title>
      <link>/post/linux/su_sudo/</link>
      <pubDate>Fri, 07 Aug 2020 21:27:00 +0800</pubDate>
      
      <guid>/post/linux/su_sudo/</guid>
      <description>su su 是一种切换身份的命令操作,我猜测是解析参数验证用户名密码执行身份的默认 bash,。 -i 参数是使 shell 成登录 shell,这样就会切换工作目录到$</description>
    </item>
    
    <item>
      <title>Golang</title>
      <link>/post/programming/golang/</link>
      <pubDate>Wed, 05 Aug 2020 23:08:00 +0800</pubDate>
      
      <guid>/post/programming/golang/</guid>
      <description>Golang 知识点 声明变量 var 可以不用初始化,var 声明初始化可以省略类型,简短声明左边必须有一个未声明变量且右边必须初始化 1 2 3 var a, b, c int var d = 1 d, e</description>
    </item>
    
    <item>
      <title>C macro definition</title>
      <link>/post/programming/c_macro_definition/</link>
      <pubDate>Thu, 14 May 2020 20:06:39 +0800</pubDate>
      
      <guid>/post/programming/c_macro_definition/</guid>
      <description>Get structure member offset bytes You only need to include &amp;lt;stddef.h&amp;gt; to use offset or write the following code 1 #define offsetof(TYPE, MEMBER) ((size_t) &amp;amp;((TYPE *)0)-&amp;gt;MEMBER) Get structure size 1 2 #define ALIGN(size, boundary) (((size) + ((boundary)-1)) &amp;amp; ~((boundary)-1)) #define ALIGN_DEFAULT(size) ALIGN(size, 8) &amp;lt;stdbool.h&amp;gt; You can use Booleans as long as you include &amp;lt;stdbool.h&amp;gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #ifndef _STDBOOL</description>
    </item>
    
    <item>
      <title>Character Set Conversion</title>
      <link>/post/algorithm/character_set_conversion/</link>
      <pubDate>Wed, 06 May 2020 22:17:49 +0800</pubDate>
      
      <guid>/post/algorithm/character_set_conversion/</guid>
      <description>Unicode to UTF8 1 2 3 4 5 6 7 8 9 | Unicode符号范围 | UTF-8编码方式 n | (十六进制) | (二进制) ---+-----------------------+------------------------------------------------------ 1 | 0000 0000 - 0000 007F | 0xxxxxxx 2 | 0000 0080 - 0000 07FF | 110xxxxx 10xxxxxx 3 |</description>
    </item>
    
    <item>
      <title>Windows Utils</title>
      <link>/post/win/win_utils/</link>
      <pubDate>Tue, 05 May 2020 17:00:05 +0800</pubDate>
      
      <guid>/post/win/win_utils/</guid>
      <description>CMD关闭防火墙 要用超级管理权限执行 1 2 3 4 ::注释 关闭所有防火墙 netsh advfirewall set allprofiles state off ::注释 查看防火墙的状态 netsh advfirewall show allprofiles CMD启动远程桌面 要用超级管理</description>
    </item>
    
    <item>
      <title>Windows Configuration</title>
      <link>/post/configure/win_conf/</link>
      <pubDate>Mon, 04 May 2020 12:00:00 +0800</pubDate>
      
      <guid>/post/configure/win_conf/</guid>
      <description>Scoop 安装 最好开启代理然后再去执行脚本安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 IF ($PSVersionTable.PSVersion.Major -lt 3 -or $PSVersionTable.CLRVersion.Major -lt 4) { return &amp;#34;PowerS</description>
    </item>
    
    <item>
      <title>Proxy</title>
      <link>/post/configure/proxy/</link>
      <pubDate>Mon, 04 May 2020 11:39:59 +0800</pubDate>
      
      <guid>/post/configure/proxy/</guid>
      <description>CMD 1 2 set http_proxy=http://127.0.0.1:1080 set https_proxy=http://127.0.0.1:1080 PowerShell 用vscode编辑profile，profile类似bash的bashrc 1 2 set-executionpolicy remotesigned code $PROFILE 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    
    <item>
      <title>MarkDown语法测试</title>
      <link>/post/test/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/test/</guid>
      <description>标题 1 2 3 4 5 6 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 段落格式 1 2 3 4 5 6 *斜体文本* _斜体文本_ **粗体文本** __</description>
    </item>
    
    <item>
      <title>JavaScript Prototype</title>
      <link>/post/programming/js_prototype/</link>
      <pubDate>Wed, 16 Oct 2019 20:39:00 +0800</pubDate>
      
      <guid>/post/programming/js_prototype/</guid>
      <description>继承 实现方法一 缺点：调用两次父类构造函数，性能开销 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Person(name, age) { (this.name = name), (this.age = age); this.setAge = function () {}; } Person.prototype.setAge = function () { console.log(&amp;#34;111&amp;#34;);</description>
    </item>
    
    <item>
      <title>HTTP</title>
      <link>/post/programming/js_utils/</link>
      <pubDate>Tue, 27 Aug 2019 17:28:00 +0800</pubDate>
      
      <guid>/post/programming/js_utils/</guid>
      <description>XMLHttpRequest 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 var xhr = new XMLHttpRequest(); xhr.open(&amp;#39;GET&amp;#39;, &amp;#39;https://test.juewei.com/a-service&amp;#39;); xhr.setRequestHeader(&amp;#34;name&amp;#34;, &amp;#34;yx&amp;#34;); xhr.send(null); xhr.onload = function(e) { var xhr = e.target; console.log(xhr.responseText); } // 测试后端优雅重启 setInterval(() =&amp;gt; { var xhr = new XMLHttpRequest() xhr.open(&amp;#34;GET&amp;#34;, &amp;#34;https://dev.juewei.com/order/actuator/health&amp;#34;); // xhr.open(&amp;#34;GET&amp;#34;, &amp;#34;https://jrs-test.juewei.com/configs.js&amp;#34;)</description>
    </item>
    
    <item>
      <title>Linux Configuration</title>
      <link>/post/configure/linux_conf/</link>
      <pubDate>Sat, 01 Sep 2018 09:51:36 +0800</pubDate>
      
      <guid>/post/configure/linux_conf/</guid>
      <description>Arch 软件包 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>/post/devops/docker/</link>
      <pubDate>Thu, 21 Jun 2018 14:55:46 +0800</pubDate>
      
      <guid>/post/devops/docker/</guid>
      <description>安装 Centos 1 2 3 4 5 6 7 8 9 10 11 # step 1: 安装必要的一些系统工具 sudo yum install -y yum-utils device-mapper-persistent-data lvm2 # Step 2: 添加软件源信息 sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # Step 3: 更新并安装 Docker-CE sudo yum makecache fast sudo yum -y install docker-ce pip install docker-compose</description>
    </item>
    
    <item>
      <title>Data Type</title>
      <link>/post/programming/data_type/</link>
      <pubDate>Mon, 18 Jun 2018 15:20:41 +0800</pubDate>
      
      <guid>/post/programming/data_type/</guid>
      <description>C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 整形: short int long 数值类型: 浮点类型: float double 基本数据类型: 字符类型: char 空类型(void) 指针类型 构</description>
    </item>
    
    <item>
      <title>Bitwise Operation</title>
      <link>/post/algorithm/bitwise_operator/</link>
      <pubDate>Thu, 23 Nov 2017 11:28:03 +0800</pubDate>
      
      <guid>/post/algorithm/bitwise_operator/</guid>
      <description>基础 符号 描述 运算规则 &amp;amp; 按位与 全为 1 为 1，否则为 0 | 按位或 全为 0 为 0，否则为 1 ~ 按位取反 0 变 1，1 变 0 &amp;lt;&amp;lt; 按位左移 各二进制位全部左移若干位，高位</description>
    </item>
    
    <item>
      <title>Keyboard Mapping</title>
      <link>/post/configure/keyboard_mapping/</link>
      <pubDate>Thu, 09 Nov 2017 19:54:44 +0800</pubDate>
      
      <guid>/post/configure/keyboard_mapping/</guid>
      <description>Windows Download mapkeyboard, modify it by yourself, and then log out or restart it 下载 mapkeyboard软件修改然后重启机器 Linux Linux has TTY terminal and desktop operation modes TTY 1.修改键位表 1 2 3 4 5 6 7 8 9 10 11 12 cd /usr/share/kbd/keymaps/i386/qwerty # 解</description>
    </item>
    
    <item>
      <title>Operator Priority</title>
      <link>/post/programming/operator_priority/</link>
      <pubDate>Fri, 13 Oct 2017 15:13:01 +0800</pubDate>
      
      <guid>/post/programming/operator_priority/</guid>
      <description>++i和i++特殊例子 1 2 3 4 5 int a, i= 0 a = ++i // a = 1, i = 1 int b, j = 0 b = i++ // b = 0, j = 1</description>
    </item>
    
    <item>
      <title>Centos</title>
      <link>/post/linux/centos/</link>
      <pubDate>Sun, 09 Jul 2017 17:32:04 +0800</pubDate>
      
      <guid>/post/linux/centos/</guid>
      <description>Centos 常用包 1 2 3 4 5 6 7 yum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng \ libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib \ zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel \ ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel \ krb5 krb5-devel libidn libidn-devel open openssl openssl-devel \ openldap openldap-devel nss_ldap openldap-clients openldap-servers \ libmcrypt libmcrypt-devel mhash mhash-devel automake cmake emacs vimnn RPM 常用命令</description>
    </item>
    
  </channel>
</rss>
